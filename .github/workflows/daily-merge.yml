name: Merge Oldest Queue Branch to Main

on:
  schedule:
    - cron: '1 19 * * *'  # 12:01 AM PKT
  workflow_dispatch:

permissions:
  contents: write  # Needed to push and delete branches

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history and all branches

      - name: Find oldest queue-* branch
        id: get_branch
        run: |
          oldest_branch=$(git for-each-ref --sort=committerdate --format='%(refname:short)' refs/remotes/origin/queue-* | head -n 1 || true)
          if [[ -z "$oldest_branch" ]]; then
            echo "No queue-* branches found."
            echo "branch_name=" >> $GITHUB_OUTPUT
          else
            echo "Oldest queue branch: $oldest_branch"
            echo "branch_name=${oldest_branch#origin/}" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        run: |
          git config --global user.name "Sohaib-Sana"
          git config --global user.email "dev.sohaibsana@gmail.com"

      - name: Checkout main
        run: |
          git checkout main
          git pull origin main

      - name: Merge oldest queue branch into main
        if: steps.get_branch.outputs.branch_name != ''
        run: |
          git merge origin/${{ steps.get_branch.outputs.branch_name }} --no-edit || echo "Nothing to merge"

      - name: Push changes to main
        if: steps.get_branch.outputs.branch_name != ''
        run: |
          git push origin main

      - name: Delete merged queue branch from origin
        if: steps.get_branch.outputs.branch_name != ''
        run: |
          git push origin --delete ${{ steps.get_branch.outputs.branch_name }}

      - name: Send Telegram notification
        if: steps.get_branch.outputs.branch_name != ''
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="âœ… Successfully merged '${{ steps.get_branch.outputs.branch_name }}' into 'main' and deleted the branch."
